class Solution
{
    //Function to find the minimum number of platforms required at the
    //railway station such that no train waits.
    static int findPlatform(int arr[], int dep[], int n)
    {
        // add your code here
        List<int[]> list = new ArrayList<>();
        for(int i=0; i<arr.length; i++){
            list.add(new int[]{arr[i], dep[i]});
        }
        
        Collections.sort(list, (a, b) -> a[0]-b[0]);
        
        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b)->a[1]-b[1]);
        int ans = 1;
        pq.add(list.get(0));
        for(int i=1; i<list.size(); i++){
            int[] train = list.get(i);
            int arrival = train[0];
            int departure = train[1];
            while(!pq.isEmpty() && pq.peek()[1] < arrival){
                pq.poll();
            }
            
            pq.add(train);
            ans = Math.max(ans, pq.size());
        }
        return ans;
        
    }
}
